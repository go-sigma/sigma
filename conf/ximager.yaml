log:
  level: debug
  proxyLevel: info
database:
  # The database type to use. Supported types are: sqlite3, mysql, postgresql
  type: mysql
  sqlite3:
    path: ximager.db
  mysql:
    host: localhost
    port: 3306
    user: ximager
    password: ximager
    dbname: ximager
  postgresql:
    host: localhost
    port: 5432
    user: ximager
    password: ximager
    dbname: ximager
    sslmode: disable
redis:
  url: redis://:ximager@localhost:6379/0
http:
  server: 0.0.0.0:3000
  worker: 0.0.0.0:3001
storage:
  rootdirectory: ./storage
  type: s3
  filesystem:
    path: /
  s3:
    ak: ximager
    sk: ximager-ximager
    endpoint: http://127.0.0.1:9000
    region: cn-north-1
    bucket: ximager
    forcePathStyle: true
# Notice: the tag never update after the first pulled from remote registry, unless you delete the image and pull again.
proxy:
  enabled: false
  endpoint: https://registry-1.docker.io
  tlsVerify: true
  username: ""
  password: ""
auth:
  internalUser:
    username: internal-ximager
    password: internal-ximager
  admin:
    username: ximager
    password: ximager
  token:
    realm: ""
    service: ""
  jwt:
    ttl: 1h
    refreshTtl: 24h
    privateKey: ""
    publicKey: "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJRUlqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0JBOEFNSUlFQ2dLQ0JBRUExQk1kTWlIMWxQck1taVhDTGhtegphRlloOTdMRU5nQUR5a2FzUDl3OU9rTlBYNGs4a24vdjZ4WWJBTzI1MUxzSGl6b0hWc2NyTGkrZGNEK0FJcXgrCmxHZ3Q0dE13ZkdaT2FmNVVBZ1g2b01UNHNJQnN4aWlBZ0hvbGlmUE1raUdsb2YwM09icEY2ZEhnOThxZ2x3L28KaHpQZDdhTlBoOGRVN2I4aTFoWG4wVXdJcktacVlKdDFuT0FiclRNSU15Y1NJUXgzTW1wWWh3OXpUREhmUHkrRQpjOVl5Z1Z1eDZzOEx4MFlzMC9JN3BkK3NhcXExb2JLeWtDcU51aHE5SjFLR2tjRkIwYmE4SlQvRkd4UjhMM3ZsClRkRGp4Z3QzVFdETm9wS3ptRU8zRndDM25yNnl3cDluY2hMbktpLzBPS3RoY2I1WnoyT0o2SWVFakUwbm4yaDMKWVdPa0RNcG0rSll0bHQyTjJkUk5BdjFuYUttUFEyNUNEWWFwZVJqODhGR0x1VFZuYy85RHJOcmR6NjZyRkFMaApkOENLQnBYWXowTkc5RG5zUThkWTlJSi9wK3hFeXlON3RJa29JZlRnaWtoVGp4RjN1YlVHcDV0cE9VYkthRVcrClRERnZtZmIwdEx5NDlmZ2xuTnkxVHZTWjMyOFh0RzZObXE0bVpXU2lRWHgwWSt3NTBnTGJzV0JsUEFHbGRKcjgKOHdRMnliSUYrUVYwdjJWL0duRHkvb2xBN1BVQ2YvWGVUb1JRczBEUDdKUlJWQWtnd2xpaWNVYVlFMDMwMmp3RQpwclcwTGZZNTV1VFFiSXRYcmZKUmVmdDVoajNmOG5BOUNQNnBWRVZGU2hXT3FmRFdkVHYxZnRuRUk0NFYrUFhtCmh0MXUwTDVPM0VsYUV4L1FkSjJjQWtZQ3RRVkd1bS9ZMlFSWUduMGxvQW14cDAwRVA1NzFjbXR6MHRpUWVlYngKL0krVFJrSHhoLzBCdVBmNWpWNGYwTWNGR3dBZCt0SFI1TVhXeldKRjVES09hZkovN0FpMitHZkxESzFTa3UzOQppQ1VXNUJJVjJGTjBtcWgwQkg3VVVIb1VUZVo2bTV0eVlQcEw4Z21acUl1WUFhZ2pxcmFHNkpacG41c0I4dXBmCnIvdCtqdm4xSjV1SzNzalVhQ21wTk1uSE5xdHpmNG1QS0tkSFFDeEFFRGZsVkJZVXRTWENNaG9QbVZYTk1KNUEKYWxnb0ltZzFlN05ESTh5Y2NkaUN5RzZCOTNsWm9icHJkSUlOMS8zMmFWWWR5bXh2SHZ5SWxMN2lDamhkT1AyQwpZbXYyTmRJN1dTRTRGUFdMWkZheWk4N0sxOCs5WVBHZWlLMDgwd2N1dlZzcHFWbERkVUpFaGd6Y0VYUEF0MzNBClFyQXdSUzZsMTczaUwxRzRGcXQ5cGl0R3BLelNFb2lVQnlnNjFUTUpuNGZqb3pMVzhTeHJaTCt4RjB1RVRpQ28KN2cvUDRjNEUzelkzOElodnp4eTB1eEx4emNMYUdsOUU0QURpTkIybmJwaFlXcjBCanBiUmRqUnhWV3R5d2N1Rwp4c1kxb3RhMVI5UmNSSjA4U0kzdXc2VW9nb01scHR2eUtOS0x4RWdZc2NGVjhTd0hzSFUyNGorVGNwQ2ViTXdYCms1ZUNHdDY5OVZNUEt3TENVcTBPcUpWT1JQZjNJT1NhSFIzM2p3YWMySGJYWk9VeE9LVFdLSDhBcW5KR1NNYzkKUFNFcHBHVVRhSTFmaERQVjNlVktOK3djZElNSUZFUDdHMldubVo3ZGZWaUZPSTAvUGNsb1ZEY0V2aFpuYnpkSQpmUUlEQVFBQgotLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0K"
