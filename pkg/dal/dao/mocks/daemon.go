// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-sigma/sigma/pkg/dal/dao (interfaces: DaemonService)
//
// Generated by this command:
//
//	mockgen -destination=mocks/daemon.go -package=mocks github.com/go-sigma/sigma/pkg/dal/dao DaemonService
//
// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/go-sigma/sigma/pkg/dal/models"
	types "github.com/go-sigma/sigma/pkg/types"
	gomock "go.uber.org/mock/gomock"
)

// MockDaemonService is a mock of DaemonService interface.
type MockDaemonService struct {
	ctrl     *gomock.Controller
	recorder *MockDaemonServiceMockRecorder
}

// MockDaemonServiceMockRecorder is the mock recorder for MockDaemonService.
type MockDaemonServiceMockRecorder struct {
	mock *MockDaemonService
}

// NewMockDaemonService creates a new mock instance.
func NewMockDaemonService(ctrl *gomock.Controller) *MockDaemonService {
	mock := &MockDaemonService{ctrl: ctrl}
	mock.recorder = &MockDaemonServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDaemonService) EXPECT() *MockDaemonServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockDaemonService) Create(arg0 context.Context, arg1 *models.DaemonLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockDaemonServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockDaemonService)(nil).Create), arg0, arg1)
}

// CreateMany mocks base method.
func (m *MockDaemonService) CreateMany(arg0 context.Context, arg1 []*models.DaemonLog) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMany", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateMany indicates an expected call of CreateMany.
func (mr *MockDaemonServiceMockRecorder) CreateMany(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMany", reflect.TypeOf((*MockDaemonService)(nil).CreateMany), arg0, arg1)
}

// Delete mocks base method.
func (m *MockDaemonService) Delete(arg0 context.Context, arg1 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockDaemonServiceMockRecorder) Delete(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockDaemonService)(nil).Delete), arg0, arg1)
}

// List mocks base method.
func (m *MockDaemonService) List(arg0 context.Context, arg1 types.Pagination, arg2 types.Sortable) ([]*models.DaemonLog, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*models.DaemonLog)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// List indicates an expected call of List.
func (mr *MockDaemonServiceMockRecorder) List(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockDaemonService)(nil).List), arg0, arg1, arg2)
}
