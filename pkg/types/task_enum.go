// Code generated by go-enum DO NOT EDIT.
// Version: 0.5.5
// Revision: b9e7d1ac24b2b7f6a5b451fa3d21706ffd8d79e2
// Build Date: 2023-01-30T01:49:43Z
// Built By: goreleaser

package types

import (
	"errors"
	"fmt"
)

const (
	// TaskCommonStatusPending is a TaskCommonStatus of type Pending.
	TaskCommonStatusPending TaskCommonStatus = "Pending"
	// TaskCommonStatusDoing is a TaskCommonStatus of type Doing.
	TaskCommonStatusDoing TaskCommonStatus = "Doing"
	// TaskCommonStatusSuccess is a TaskCommonStatus of type Success.
	TaskCommonStatusSuccess TaskCommonStatus = "Success"
	// TaskCommonStatusFailed is a TaskCommonStatus of type Failed.
	TaskCommonStatusFailed TaskCommonStatus = "Failed"
)

var ErrInvalidTaskCommonStatus = errors.New("not a valid TaskCommonStatus")

// String implements the Stringer interface.
func (x TaskCommonStatus) String() string {
	return string(x)
}

// String implements the Stringer interface.
func (x TaskCommonStatus) IsValid() bool {
	_, err := ParseTaskCommonStatus(string(x))
	return err == nil
}

var _TaskCommonStatusValue = map[string]TaskCommonStatus{
	"Pending": TaskCommonStatusPending,
	"Doing":   TaskCommonStatusDoing,
	"Success": TaskCommonStatusSuccess,
	"Failed":  TaskCommonStatusFailed,
}

// ParseTaskCommonStatus attempts to convert a string to a TaskCommonStatus.
func ParseTaskCommonStatus(name string) (TaskCommonStatus, error) {
	if x, ok := _TaskCommonStatusValue[name]; ok {
		return x, nil
	}
	return TaskCommonStatus(""), fmt.Errorf("%s is %w", name, ErrInvalidTaskCommonStatus)
}
