// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/go-sigma/sigma/pkg/signing/definition (interfaces: Verifying)
//
// Generated by this command:
//
//	mockgen -destination=mocks/verifying.go -package=mocks github.com/go-sigma/sigma/pkg/signing/definition Verifying
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockVerifying is a mock of Verifying interface.
type MockVerifying struct {
	ctrl     *gomock.Controller
	recorder *MockVerifyingMockRecorder
}

// MockVerifyingMockRecorder is the mock recorder for MockVerifying.
type MockVerifyingMockRecorder struct {
	mock *MockVerifying
}

// NewMockVerifying creates a new mock instance.
func NewMockVerifying(ctrl *gomock.Controller) *MockVerifying {
	mock := &MockVerifying{ctrl: ctrl}
	mock.recorder = &MockVerifyingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVerifying) EXPECT() *MockVerifyingMockRecorder {
	return m.recorder
}

// Verify mocks base method.
func (m *MockVerifying) Verify(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Verify", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Verify indicates an expected call of Verify.
func (mr *MockVerifyingMockRecorder) Verify(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Verify", reflect.TypeOf((*MockVerifying)(nil).Verify), arg0, arg1)
}
