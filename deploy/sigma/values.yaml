# Default values for sigma.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: docker.io
  repository: go-sigma/sigma
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

middleware:
  type: internal

config:
  log:
    level: debug
  database:
    # The database type to use. Supported types are: sqlite3, mysql, postgresql
    type: mysql
    sqlite3:
      path: sigma.db
    mysql:
      host: 10.37.48.71
      port: 30306
      user: sigma
      password: sigma
      dbname: sigma
    postgresql:
      host: localhost
      port: 5432
      user: sigma
      password: sigma
      dbname: sigma
      sslmode: disable
  redis:
    url: redis://:sigma@10.37.48.71:30060/0
  http:
    server: 0.0.0.0:3000
    worker: 0.0.0.0:3001
  storage:
    rootdirectory: ./storage
    type: s3
    filesystem:
      path: /
    s3:
      ak: sigma
      sk: sigma-sigma
      endpoint: http://10.37.48.71:32000
      region: cn-north-1
      bucket: sigma
      forcePathStyle: true
  # Notice: the tag never update after the first pulled from remote registry, unless you delete the image and pull again.
  proxy:
    enabled: true
    endpoint: https://registry-1.docker.io
    tlsVerify: true
    username: ""
    password: ""
  auth:
    user:
      password: ""
    internalUser:
      username: internal-sigma
      password: internal-sigma
    admin:
      username: sigma
      password: sigma
    token:
      realm: ""
      service: ""
    jwt:
      ttl: 1h
      refreshTtl: 24h
      privateKey: ""

redis:
  enabled: true # 是否启用Redis部署
  auth:
    enabled: true
    password: "sigma"
  master:
    service:
      type: NodePort
      nodePorts:
        redis: 30060
  replica:
    replicaCount: 1

minio:
  enabled: true # 是否启用MinIO部署
  accessKey: "sigma"
  secretKey: "sigma-sigma"
  service:
    type: NodePort
    nodePort: 32000
  buckets:
    - name: sigma
      policy: none
      purge: false

mysql:
  enabled: true # 是否启用MySQL部署
  auth:
    rootPassword: "sigma"
    createDatabase: true
    database: "sigma"
    username: "sigma"
    password: "sigma"
  primary:
    service:
      type: NodePort
      nodePorts:
        mysql: 30306
