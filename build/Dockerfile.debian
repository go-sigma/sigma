ARG GOLANG_VERSION=1.20.7
ARG NODE_VERSION=18-alpine3.18
ARG ALPINE_VERSION=3.18
ARG DEBIAN_VERSION=bullseye-slim

FROM node:${NODE_VERSION} as web-builder

RUN set -eux && apk add --no-cache make bash ncurses build-base

COPY ./web /web

WORKDIR /web

RUN set -eux && yarn install --frozen-lockfile && yarn build

FROM alpine:${ALPINE_VERSION} as syft

ARG SYFT_VERSION=0.88.0
ARG TARGETARCH=amd64

RUN set -eux && \
  apk add --no-cache wget && \
  wget -q -O syft_"${SYFT_VERSION}"_linux_"${TARGETARCH}".tar.gz https://github.com/anchore/syft/releases/download/v"${SYFT_VERSION}"/syft_"${SYFT_VERSION}"_linux_"${TARGETARCH}".tar.gz && \
  tar -xzf syft_"${SYFT_VERSION}"_linux_"${TARGETARCH}".tar.gz && \
  mv syft /usr/local/bin/syft && \
  rm syft_"${SYFT_VERSION}"_linux_"${TARGETARCH}".tar.gz

FROM alpine:${ALPINE_VERSION} as trivy

ARG TRIVY_VERSION=0.44.1
ARG ORAS_VERSION=1.0.0
ARG TARGETARCH=amd64

RUN set -eux && \
  apk add --no-cache wget && \
  case "${TARGETARCH}" in \
		amd64) export TRIVYARCH='64bit' ;; \
		arm64) export TRIVYARCH='ARM64' ;; \
	esac; \
  wget -q -O trivy_"${TRIVY_VERSION}"_Linux-"${TRIVYARCH}".tar.gz https://github.com/aquasecurity/trivy/releases/download/v"${TRIVY_VERSION}"/trivy_"${TRIVY_VERSION}"_Linux-"${TRIVYARCH}".tar.gz && \
  tar -xzf trivy_"${TRIVY_VERSION}"_Linux-"${TRIVYARCH}".tar.gz && \
  mv trivy /usr/local/bin/trivy && \
  rm trivy_"${TRIVY_VERSION}"_Linux-"${TRIVYARCH}".tar.gz && \
  wget -q -O oras_"${ORAS_VERSION}"_linux_"${TARGETARCH}".tar.gz https://github.com/oras-project/oras/releases/download/v"${ORAS_VERSION}"/oras_"${ORAS_VERSION}"_linux_"${TARGETARCH}".tar.gz && \
  tar -xzf oras_"${ORAS_VERSION}"_linux_"${TARGETARCH}".tar.gz && \
  mv oras /usr/local/bin/oras && \
  rm oras_"${ORAS_VERSION}"_linux_"${TARGETARCH}".tar.gz && \
  oras pull ghcr.io/aquasecurity/trivy-db:2 && \
  mkdir -p /opt/trivy/ && \
  mv ./db.tar.gz /opt/trivy/db.tar.gz && \
  cd /opt/trivy && \
  tar -xzf db.tar.gz && \
  rm db.tar.gz

FROM golang:${GOLANG_VERSION} as builder

RUN set -eux && \
  apt-get update && \
	apt-get install -y --no-install-recommends \
		build-essential \
		git-lfs \
	&& \
	rm -rf /var/lib/apt/lists/*

COPY . /go/src/github.com/go-sigma/sigma
COPY --from=web-builder /web/dist /go/src/github.com/go-sigma/sigma/web/dist

WORKDIR /go/src/github.com/go-sigma/sigma

RUN make build-release

FROM debian:${DEBIAN_VERSION}

ARG TARGETARCH=amd64
ARG YQ_VERSION=v4.34.2

RUN set -eux && \
  apt-get update && \
	apt-get install -y --no-install-recommends \
		redis \
		wget \
    ca-certificates \
		curl \
		netbase \
    gnupg \
	  dirmngr \
	&& \
  case "${TARGETARCH}" in \
		amd64) export YQ_ARCH='amd64' ;; \
		arm64) export YQ_ARCH='arm64' ;; \
	esac; \
  wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_${YQ_ARCH}.tar.gz -O - | tar xz && mv yq_linux_${YQ_ARCH} /usr/bin/yq && \
	rm -rf /var/lib/apt/lists/*

COPY --from=syft /usr/local/bin/syft /usr/local/bin/syft
COPY --from=trivy /usr/local/bin/trivy /usr/local/bin/trivy
COPY --from=trivy /opt/trivy/trivy.db /opt/trivy/db/trivy.db
COPY ./conf/config.yaml /etc/sigma/config.yaml
COPY ./build/entrypoint.sh /entrypoint.sh
COPY ./conf/redis.conf /etc/sigma/redis.conf
COPY --from=builder /go/src/github.com/go-sigma/sigma/bin/sigma /usr/local/bin/sigma

ENTRYPOINT ["/entrypoint.sh"]

CMD ["sigma", "server"]
